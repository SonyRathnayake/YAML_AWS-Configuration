AWSTemplateFormatVersion: 2010-09-09
Description: Task for dex auth

Resources:
  #Creating Tasks
  Auth:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: auth-service
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: service2
          Image: public.ecr.aws/w2z5i4h0/dex-auth-service:v3
          Cpu: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 8000
              Protocol: tcp
  Service:
    Type: AWS::ECS::Service
    DependsOn: LoadBalancerRule
    Properties:
      ServiceName: auth-service
      TaskDefinition: !Ref Auth
      Cluster: !ImportValue "Dex-LK"
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !ImportValue dex-PublicSubnet1
            - !ImportValue dex-PublicSubnet2
          SecurityGroups:
            - !Ref AuthSecurityGroup
      LoadBalancers:
        - ContainerName: service2
          ContainerPort: 8000
          TargetGroupArn: !Ref TargetGroup
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: auth-tg
      VpcId: !ImportValue dex-VPC
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: /health-check
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 30
      HealthyThresholdCount: 10
      TargetType: ip
      Tags:
        - Key: Name
          Value: auth-tg
  AuthSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable http(8000) & ssh(22) access
      GroupName: Auth-SG
      VpcId: !ImportValue dex-VPC
      SecurityGroupIngress:
        # allow http
        - IpProtocol: tcp
          FromPort: "8000"
          ToPort: "8000"
          CidrIp: 0.0.0.0/0 # any IP
      Tags:
        - Key: Name
          Value: Auth SG
  LoadBalancerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: "forward"
      Conditions:
        - Field: path-pattern
          Values:
            - /api/authenticate*
      ListenerArn: arn:aws:elasticloadbalancing:ap-southeast-1:524642062901:listener/app/ALB/0813910c7dc18f93/e99cc5b435cf533f
      Priority: 50
